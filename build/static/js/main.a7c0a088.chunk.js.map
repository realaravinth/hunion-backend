{"version":3,"sources":["app/reducers/authSlice.ts","components/Ncurses/wrapper/WithMenuOuter.tsx","app/reducers/startTimeSlice.ts","components/Heading/CountDown/CountDown.tsx","components/Heading/CountDown/index.tsx","components/AsciiArt/index.tsx","components/AsciiArt/AsciiArt.tsx","components/Heading/index.tsx","components/Heading/Heading.tsx","components/Navbar/NavChallenges.tsx","components/Navbar/NavLeaderboard.tsx","components/Navbar/NavLogout.tsx","components/Navbar/NavLogin.tsx","components/Navbar/index.tsx","components/Navbar/Navbar.tsx","components/Ncurses/wrapper/WithContentContainer.tsx","components/Ncurses/wrapper/WithMenuDialog.tsx","components/Ncurses/PageTitle.tsx","components/Ncurses/Border/MenuBottomBorder.tsx","components/Ncurses/Border/MenuTopBorder.tsx","components/Ncurses/Border/MenuBorder.tsx","components/Ncurses/MenuTitle.tsx","components/Ncurses/MenuTopText.tsx","components/Ncurses/BanMobileDecives.tsx","app/store.ts","app/utils/persistState.ts","app/API/api.tsx","app/API/login.ts","app/utils/blankString.ts","components/Ncurses/TextInput.tsx","components/Ncurses/wrapper/WithMenuButton.tsx","components/Login/index.tsx","components/Login/Login.tsx","components/Leaderboard/index.tsx","components/Leaderboard/Leaderboard.tsx","components/Register/index.tsx","components/Register/Register.tsx","app/API/register.ts","components/Challenges/ShowQuestion.tsx","res/challenges.ts","res/challenges/1.ts","res/challenges/2.ts","res/challenges/3.ts","res/challenges/4.ts","res/challenges/5.ts","res/challenges/6.ts","res/challenges/7.ts","components/Challenges/ShowTitles.tsx","components/Ncurses/wrapper/WithContentColumned.tsx","components/Ncurses/wrapper/WithContentSidebar.tsx","components/Ncurses/wrapper/WithContentSidebarBody.tsx","components/Challenges/Challenges.tsx","components/Challenges/index.tsx","components/Root/index.tsx","components/Root/Root.tsx","app/API/logout.ts","components/Logout/index.tsx","components/Logout/Logout.tsx","components/Loading/ProgressBar.tsx","components/Loading/index.tsx","components/Loading/Loading.tsx","components/Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["isAuthenticated","menuDialogSize","initialState","value","challengeReady","authSlice","createSlice","name","reducers","setLoggedIn","state","loggedIn","setLoggedOut","loggedOut","setRegistered","registered","setChallengeReady","actions","selectAuth","authenticator","startTimeSlice","set_start_time","action","payload","selectstartTime","startTimesetter","CountDownNotNull","initTimeinSeconds","initTimeinMinutes","useState","timeInSeconds","setTimeInSeconds","timeInMinutes","setTimeInMinutes","history","useHistory","useEffect","timer","setTimeout","tick","clearTimeout","push","presentableTime","time","toString","CountDown","authVal","useSelector","startTime","console","error","CHALLENGE_DURATION","Math","floor","Date","now","AsciiArt","dangerouslySetInnerHTML","__html","Heading","className","to","NavChallenges","NavLeaderboard","NavLogout","NavLogin","Navbar","WithContentContainer","children","WithMenuOuter","size","loading","PageTitle","location","title","document","setPageTitle","MenuBottomBorder","MenuTopBorder","MenuBorder","MenuTitle","MenuTopText","text","WithMenuDialog","menuTitle","pageTitle","topText","classes","big","mobile","BanMobileDevices","persistedState","searializedState","localStorage","getItem","JSON","parse","e","loadState","store","configureStore","reducer","preloadedState","useAppDispatch","useDispatch","API","GET_CHALLENGES","LOGIN","REGISTER","LOGOUT","CHECK_RESPONSE","LEADERBOARD","GET_STATE","login","a","fetch","method","headers","body","stringify","then","response","json","isBlankString","replace","length","TextInput","label","required","autoFocus","autoComplete","input_type","placeholder","onChange","type","WithMenuButtonSmall","onClick","WithMenuButton","Login","userID","setUserID","dispatch","small","event","target","preventDefault","alert","data","status","map","parseInt","log","catch","Leaderboard","Register","nickname","setNickname","email","setEmail","register","duplicateValue","submitButtonSmall","getElementById","getAttribute","showHintVals","binarySet","RegExp","FirstQuestion","hintState","showFlag","noHint","ShowQuestion","prelude","id","userAnswer","setUserAnswer","showHint","setShowHint","test","showBinToDecHint","CHALLENGES","challenges","challengeTitle","challengeBody","challengeAnswer","score","ShowTitles","Titles","c","key","WithContentColumned","WithContentSidebar","WithContentSidebarBody","submitButton","Challenges","authState","currentQ","setCurrentQ","currentQBody","setCurrentQBody","forEach","i","setBody","Root","logout","credentials","Logout","ProgressBar","completed","fillerBoxStyles","height","width","border","borderColor","textAlign","numBoxes","boxes","_","style","display","Loading","Routes","component","path","exact","App","window","matchMedia","matches","Boolean","hostname","match","subscribe","setItem","saveState","getState","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a7c0a088.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nimport {RootState} from '../store';\n\nexport interface authState {\n  value: isAuthenticated;\n}\n\nexport enum isAuthenticated {\n  loggedOut,\n  loggedIn,\n  registered,\n  challengeReady,\n}\n\nconst initialState: authState = {\n  value: isAuthenticated.challengeReady,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setLoggedIn: state => {\n      state.value = isAuthenticated.loggedIn;\n    },\n    setLoggedOut: state => {\n      state.value = isAuthenticated.loggedOut;\n    },\n    setRegistered: state => {\n      state.value = isAuthenticated.registered;\n    },\n    setChallengeReady: state => {\n      state.value = isAuthenticated.challengeReady;\n    },\n  },\n});\n\nexport const {\n  setLoggedIn,\n  setLoggedOut,\n  setRegistered,\n  setChallengeReady,\n} = authSlice.actions;\n\nexport const selectAuth = (state: RootState) => state.authenticator.value;\n\nexport default authSlice.reducer;\n","import React from 'react';\n\nenum menuDialogSize {\n  big,\n  small,\n  mobile,\n  loading,\n}\n\ntype withMenuOuterProps = {\n  size: menuDialogSize;\n};\n\nconst WithMenuOuter: React.FC<withMenuOuterProps> = ({children, size}) => {\n  if (size === menuDialogSize.loading) {\n    return <div className=\"menuouter menuouterloading\">{children}</div>;\n  }\n  return <div className=\"menuouter\">{children}</div>;\n};\n\nexport default WithMenuOuter;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {RootState} from '../store';\n\nexport type startTimeState = {\n  value: null | number;\n};\n\nconst initialState: startTimeState = {\n  value: null, //Math.floor(Date.now() / 1000)\n};\n\nexport const startTimeSlice = createSlice({\n  name: 'startTime',\n  initialState,\n  reducers: {\n    set_start_time: (state, action: PayloadAction<number>) => {\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const {set_start_time} = startTimeSlice.actions;\n\nexport const selectstartTime = (state: RootState) =>\n  state.startTimesetter.value;\n\nexport default startTimeSlice.reducer;\n","import React, {useState, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\n\nimport {selectAuth, isAuthenticated} from '../../../app/reducers/authSlice';\nimport {selectstartTime} from '../../../app/reducers/startTimeSlice';\n\nconst ABSOLUTE_CHALLENGE_DURATION: number = 25 * 60; //in seconds\n\nconst CountDown: React.FC = () => {\n  const authVal = useSelector(selectAuth);\n  const startTime = useSelector(selectstartTime);\n\n  if (authVal !== isAuthenticated.challengeReady) return <div />;\n\n  if (startTime === null) {\n    console.error(\n      `can't mount timer,\n        startTime yet to be received from API. startTime: ${startTime}`,\n    );\n    return <div />;\n  }\n\n  const END_TIME: number = startTime + ABSOLUTE_CHALLENGE_DURATION;\n  const CHALLENGE_DURATION: number = END_TIME - Math.floor(Date.now() / 1000); //relative time\n  //calculating time:\n  const initTimeinSeconds: number = CHALLENGE_DURATION % 60;\n  const initTimeinMinutes: number =\n    (CHALLENGE_DURATION - initTimeinSeconds) / 60;\n\n  return (\n    <CountDownNotNull\n      initTimeinMinutes={initTimeinMinutes}\n      initTimeinSeconds={initTimeinSeconds}\n    />\n  );\n};\n\ntype CountDownNotNullProps = {\n  initTimeinMinutes: number;\n  initTimeinSeconds: number;\n};\n\nconst CountDownNotNull: React.FC<CountDownNotNullProps> = ({\n  initTimeinSeconds,\n  initTimeinMinutes,\n}) => {\n  const [timeInSeconds, setTimeInSeconds] = useState(initTimeinSeconds);\n  const [timeInMinutes, setTimeInMinutes] = useState(initTimeinMinutes);\n  const history = useHistory();\n\n  useEffect(() => {\n    const timer = setTimeout(() => tick(), 1000);\n    // Clear timeout if the component is unmounted\n    return () => clearTimeout(timer);\n  });\n\n  const tick = () => {\n    if (timeInSeconds === 1 && timeInMinutes === 0) {\n      history.push('/logout');\n    }\n    if (timeInSeconds === 0) {\n      setTimeInSeconds(59);\n      setTimeInMinutes(timeInMinutes - 1);\n    } else {\n      setTimeInSeconds(timeInSeconds - 1);\n    }\n  };\n\n  return (\n    <div>\n      {presentableTime(timeInMinutes)}:{presentableTime(timeInSeconds)}\n    </div>\n  );\n};\n\nconst presentableTime = (time: number) => {\n  if (time < 10) {\n    return '0' + time.toString();\n  } else {\n    return time.toString();\n  }\n};\n\nexport default CountDown;\n","import CountDown from './CountDown';\nexport default CountDown;\n","import AsciiArt from './AsciiArt';\nexport default AsciiArt;\n","import React from 'react';\n\nconst AsciiArt: React.FC= () => (\n\t<div \n\t\tdangerouslySetInnerHTML={{__html:'<p class=\"ascii-art\">███╗&nbsp&nbsp&nbsp██╗██╗&nbsp&nbsp&nbsp██╗██╗&nbsp&nbsp&nbsp&nbsp&nbsp██╗&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp██████╗████████╗███████╗<br /> ████╗&nbsp&nbsp██║██║&nbsp&nbsp&nbsp██║██║&nbsp&nbsp&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp██╔════╝╚══██╔══╝██╔════╝<br /> ██╔██╗&nbsp██║██║&nbsp&nbsp&nbsp██║██║&nbsp&nbsp&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp█████╗&nbsp&nbsp<br /> ██║╚██╗██║██║&nbsp&nbsp&nbsp██║██║&nbsp&nbsp&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp██╔══╝&nbsp&nbsp<br /> ██║&nbsp╚████║╚██████╔╝███████╗███████╗&nbsp&nbsp&nbsp&nbsp╚██████╗&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp██║&nbsp&nbsp&nbsp&nbsp&nbsp<br /> ╚═╝&nbsp&nbsp╚═══╝&nbsp╚═════╝&nbsp╚══════╝╚══════╝&nbsp&nbsp&nbsp&nbsp&nbsp╚═════╝&nbsp&nbsp&nbsp╚═╝&nbsp&nbsp&nbsp╚═╝&nbsp&nbsp&nbsp&nbsp&nbsp<br />'}}> \n\t</div>\n\n);\n\nexport default AsciiArt;\n","import Heading from './Heading';\n\nexport default Heading;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n//components\nimport CountDown from './CountDown';\nimport AsciiArt from './../AsciiArt';\n\nconst Heading: React.FC = () => (\n  <div className=\"mainheader\">\n    <Link to=\"/\">\n      <AsciiArt />\n    </Link>\n    <div className=\"filler\" />\n    <div className=\"timer\">\n      <CountDown />\n    </div>\n  </div>\n);\n\nexport default Heading;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst NavChallenges: React.FC = () => (\n  <li>\n    <NavLink to=\"/challenges\">/challenges</NavLink>\n  </li>\n);\n\nexport default NavChallenges;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst NavLeaderboard: React.FC = () => (\n  <li>\n    <NavLink to=\"/leaderboard\">/leaderboard</NavLink>\n  </li>\n);\n\nexport default NavLeaderboard;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst NavLogout: React.FC = () => (\n  <li>\n    <NavLink to=\"/logout\">/logout</NavLink>\n  </li>\n);\n\nexport default NavLogout;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst NavLogin: React.FC = () => (\n  <li>\n    <NavLink to=\"/login\">/login</NavLink>\n  </li>\n);\n\nexport default NavLogin;\n","import Navbar from './Navbar';\nexport default Navbar;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {selectAuth, isAuthenticated} from '../../app/reducers/authSlice';\n\nimport NavChallenges from './NavChallenges';\nimport NavLeaderboard from './NavLeaderboard';\nimport NavLogout from './NavLogout';\nimport NavLogin from './NavLogin';\n\nconst Navbar: React.FC = () => {\n  const authState = useSelector(selectAuth);\n\n  if (authState === isAuthenticated.challengeReady) {\n    return (\n      <ul className=\"navbar\">\n        <NavChallenges />\n        <NavLeaderboard />\n        <NavLogout />\n      </ul>\n    );\n  } else {\n    return (\n      <ul className=\"navbar\">\n        <NavLogin />\n      </ul>\n    );\n  }\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst WithContentContainer: React.FunctionComponent = ({children}) => (\n  <div className=\"menuoptions\">{children}</div>\n);\n\nexport default WithContentContainer;\n","import React from 'react';\n\n//components\nimport WithMenuOuter from './WithMenuOuter';\nimport PageTitle from '../PageTitle';\n\nimport MenuTitle from '../MenuTitle';\nimport MenuTopText from '../MenuTopText';\n\nexport enum menuDialogSize {\n  big,\n  small,\n  mobile,\n  loading,\n}\n\ntype WithMenuDialogProps = {\n  size: menuDialogSize;\n  topText: string;\n  pageTitle: string;\n  menuTitle: string;\n};\n\nconst WithMenuDialog: React.FC<WithMenuDialogProps> = ({\n  menuTitle,\n  pageTitle,\n  topText,\n  size,\n  children,\n}) => {\n  let classes = 'menudialog';\n\n  if (size === menuDialogSize.big) {\n    classes += ' menudialogbig';\n  }\n  if (size === menuDialogSize.mobile) {\n    classes += ' menudialogmobile';\n  }\n  if (size === menuDialogSize.loading) {\n    classes += ' menudialogloading';\n  }\n\n  return (\n    <div className={classes}>\n      <WithMenuOuter size={size}>\n        <MenuTitle title={menuTitle} />\n        <MenuTopText text={topText} />\n        <PageTitle location={pageTitle} />\n        {children}\n      </WithMenuOuter>\n    </div>\n  );\n};\n\nexport default WithMenuDialog;\n","import React, {useEffect} from 'react';\n\ntype PageTitleProps = {\n  location: string;\n};\nconst PageTitle: React.FC<PageTitleProps> = ({location}) => {\n  const setPageTitle = () => {\n    const title = location + ' | Null CTF';\n    document.title = title;\n  };\n  useEffect(() => {\n    setPageTitle();\n  });\n\n  return <div />;\n};\n\nexport default PageTitle;\n","import React from 'react';\n\nconst MenuBottomBorder: React.FunctionComponent = () => (\n  <div>\n    <div className=\"menubottomborder\"></div>\n  </div>\n);\n\nexport default MenuBottomBorder;\n","import React from 'react';\n\nconst MenuTopBorder: React.FunctionComponent = () => (\n  <div>\n    <div className=\"menutopborder\"></div>\n  </div>\n);\n\nexport default MenuTopBorder;\n","import React from 'react';\n\n//Components\nimport MenuBottomBorder from './MenuBottomBorder';\nimport MenuTopBorder from './MenuTopBorder';\n\nconst MenuBorder: React.FunctionComponent = () => (\n  <div>\n    <MenuTopBorder />\n    <MenuBottomBorder />\n  </div>\n);\n\nexport default MenuBorder;\n","import React from 'react';\n\n//components\nimport MenuBorder from './Border/MenuBorder';\ntype MenuTitleProps = {\n  title: string;\n};\n\nconst MenuTitle: React.FunctionComponent<MenuTitleProps> = ({title}) => (\n  <div className=\"menuheader\">\n    <span>{title}</span>\n    <MenuBorder />\n  </div>\n);\n\nexport default MenuTitle;\n","import React from 'react';\n\ntype MenuTopTextProps  = {\n  text: string;\n}\n\nconst MenuTopText: React.FunctionComponent<MenuTopTextProps> = ({ text })=> (\n\t<div className=\"menutoptext\">\n\t\t{ text }\n\t</div>\n\n);\n\nexport default MenuTopText;\n\n","import React from 'react';\n\n//Componenets:\n\nimport WithContentContainer from './wrapper/WithContentContainer';\nimport WithMenuDialog, {menuDialogSize} from './wrapper/WithMenuDialog';\n\nconst BanMobileDevices: React.FunctionComponent = () => (\n  <WithMenuDialog\n    size={menuDialogSize.mobile}\n    menuTitle={'Error'}\n    topText={\n      'Mobile devices are not supported. We regret the inconvenience caused.'\n    }\n    pageTitle={'Error'}>\n    <WithContentContainer>\n      <p>\n        This CTF relies heavily on the functionality provided by browsers on\n        desktop computers so please visit us from a desktop computer\n      </p>\n    </WithContentContainer>\n  </WithMenuDialog>\n);\n\nexport default BanMobileDevices;\n","import {configureStore} from '@reduxjs/toolkit';\nimport {useDispatch} from 'react-redux';\n\nimport {authSlice} from './reducers/authSlice';\nimport {startTimeSlice} from './reducers/startTimeSlice';\nimport {loadState} from './utils/persistState';\n\nconst persistedState = loadState();\n\nexport const store = configureStore({\n  reducer: {\n    authenticator: authSlice.reducer,\n    startTimesetter: startTimeSlice.reducer,\n  },\n  preloadedState: persistedState,\n});\n\ntype AppDisatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDisatch>();\nexport type RootState = ReturnType<typeof store.getState>;\n","export const loadState = () => {\n  try {\n    const searializedState = localStorage.getItem('state');\n    if (searializedState == null) {\n      return undefined;\n    }\n    return JSON.parse(searializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: any) => {\n  try {\n    const searializedState = JSON.stringify(state);\n    localStorage.setItem('state', searializedState);\n  } catch (e) {\n    console.log(`error from saveState: ${e}`);\n  }\n};\n","type apiEndpoints = {\n  GET_CHALLENGES: string;\n  LOGIN: string;\n  REGISTER: string;\n  LOGOUT: string;\n  CHECK_RESPONSE: string;\n  LEADERBOARD: string;\n  GET_STATE: string;\n};\n\nconst API: apiEndpoints = {\n  GET_CHALLENGES: '/api/get-challenges',\n  LOGIN: '/api/login',\n  REGISTER: '/api/register',\n  LOGOUT: '/api/logout',\n  CHECK_RESPONSE: '/api/check-response',\n  LEADERBOARD: '/api/leaderboard',\n  GET_STATE: '/api/get-state',\n};\n\nexport default API;\n","import API from './api';\n\nexport type loginRequestPayload = {\n  userID: string;\n};\n\nexport type loginResponsePayload = {\n  startTime: string;\n};\n\nexport const login = async (payload: loginRequestPayload) =>\n  fetch(API.LOGIN, {\n    method: 'post',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(payload),\n  }).then(response => response.json());\n","const isBlankString = (value: string) => !value.replace(/\\s/g, '').length;\n\nexport  default isBlankString;\n","import React, {ChangeEvent} from 'react';\n\nimport '../../ncurses.css';\n\ntype TextInputProps = {\n  label: string;\n  required: boolean;\n  autoFocus: boolean;\n  autoComplete: string;\n  name: string;\n  input_type: string;\n  placeholder: string;\n  onChange(event: ChangeEvent<HTMLInputElement>): void;\n  value: string;\n};\n\nconst TextInput: React.FunctionComponent<TextInputProps> = ({\n  label,\n  required,\n  autoFocus,\n  autoComplete,\n  name,\n  input_type,\n  placeholder,\n  value,\n  onChange,\n}) => (\n  <div className=\"formGroup\">\n    <label className=\"label\">{label}</label>\n    <input\n      className=\"textInput\"\n      required={required}\n      autoFocus={autoFocus}\n      autoComplete={autoComplete}\n      name={name}\n      type={input_type}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    />\n  </div>\n);\n\nexport default TextInput;\n","import React from 'react';\n\ntype withMenuButtonProps = {\n  onClick(e: React.MouseEvent): void;\n};\n\nconst WithMenuButton: React.FunctionComponent<withMenuButtonProps> = ({\n  children,\n  onClick,\n}) => (\n  <div className=\"btn\" onClick={onClick}>\n    {children}\n  </div>\n);\n\nexport const WithMenuButtonSmall: React.FunctionComponent<withMenuButtonProps> = ({\n  children,\n  onClick,\n}) => (\n  <div className=\"btnSmallOuter\">\n    <div className=\"btnSmall\" onClick={onClick}>\n      {children}\n    </div>\n  </div>\n);\n\nexport default WithMenuButton;\n","import Login from './Login';\nexport default Login;\n","import React, {useState, ChangeEvent} from 'react';\nimport {Redirect, useHistory} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n// app stuff\nimport {\n  selectAuth,\n  setLoggedIn,\n  isAuthenticated,\n} from '../../app/reducers/authSlice';\nimport {set_start_time} from '../../app/reducers/startTimeSlice';\nimport {useAppDispatch} from '../../app/store';\n\n// api stuff\nimport {\n  login,\n  loginResponsePayload,\n  loginRequestPayload,\n} from '../../app/API/login';\n\n//utils\nimport isBlankString from '../../app/utils/blankString';\n\n//Componenets:\nimport TextInput from '../Ncurses/TextInput';\nimport WithMenuButton from '../Ncurses/wrapper/WithMenuButton';\nimport WithContentContainer from '../Ncurses/wrapper/WithContentContainer';\nimport WithMenuDialog, {\n  menuDialogSize,\n} from '../Ncurses/wrapper/WithMenuDialog';\n\nconst Login: React.FunctionComponent = () => {\n  const [userID, setUserID] = useState('');\n  const dispatch = useAppDispatch();\n  const authVal = useSelector(selectAuth);\n  let history = useHistory();\n\n  const logingHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (isBlankString(userID)) {\n      alert('uer ID cant be empty');\n    } else {\n      const payload: loginRequestPayload = {\n        userID,\n      };\n\n      login(payload)\n        .then(response => response.json())\n        .then(data => {\n          const body = data.body;\n          switch (data.status) {\n            case 200:\n              alert('Logged in');\n              body.map((time: loginResponsePayload) => {\n                dispatch(set_start_time(parseInt(time.startTime)));\n                dispatch(setLoggedIn());\n                history.push('/register');\n              });\n              break;\n            case 401:\n              alert('invalid credentials');\n              break;\n            case 403:\n              body.map((time: loginResponsePayload) => {\n                dispatch(set_start_time(parseInt(time.startTime)));\n              });\n              alert('you are early');\n              break;\n            case 501:\n              alert('Internal server error');\n              break;\n            default:\n              console.log(\n                `Error while trying to login, server returned : ${data.status}`,\n              );\n          }\n        })\n        .catch(e => console.log(`Error occoured: ${e}`));\n    }\n  };\n\n  const updateUserID = (event: ChangeEvent<HTMLInputElement>) =>\n    setUserID(event.target.value);\n  if (authVal === isAuthenticated.loggedOut) {\n    return (\n      <WithMenuDialog\n        size={menuDialogSize.small}\n        menuTitle={'Log in'}\n        pageTitle={'Log in'}\n        topText={'Please Log in to continue'}>\n        <WithContentContainer>\n          <TextInput\n            label={'User ID: '}\n            autoFocus={true}\n            autoComplete={'username'}\n            name={'userId'}\n            input_type={'text'}\n            placeholder={'User ID'}\n            value={userID}\n            onChange={updateUserID}\n            required={true}\n          />\n        </WithContentContainer>\n\n        <WithMenuButton onClick={logingHandler}>\n          <span>L</span>og in\n        </WithMenuButton>\n      </WithMenuDialog>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Login;\n","import Leaderboard from './Leaderboard';\nexport default Leaderboard;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n//redux stuff\nimport {selectAuth, isAuthenticated} from '../../app/reducers/authSlice';\n\n//Componenets:\n\nimport WithContentContainer from '../Ncurses/wrapper/WithContentContainer';\nimport WithMenuDialog, {\n  menuDialogSize,\n} from '../Ncurses/wrapper/WithMenuDialog';\n\nconst Leaderboard: React.FC = () => {\n  const authState = useSelector(selectAuth);\n\n  if (authState === isAuthenticated.challengeReady) {\n    return (\n      <WithMenuDialog\n        size={menuDialogSize.big}\n        menuTitle={'Leaderboard'}\n        pageTitle={'Leaderboard'}\n        topText={'Top 10 scores: '}>\n        <WithContentContainer>\n          <p> Scorecard goes here </p>\n        </WithContentContainer>\n      </WithMenuDialog>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Leaderboard;\n","import Register from './Register';\nexport default Register;\n","import React, {useState, ChangeEvent} from 'react';\nimport {useHistory, Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n//Redux stuff\nimport {useAppDispatch} from '../../app/store';\nimport {\n  selectAuth,\n  setRegistered,\n  isAuthenticated,\n} from '../../app/reducers/authSlice';\n\n// API stuff\nimport {\n  registerationRequestPayload,\n  registerationResponsePayload,\n  register,\n} from '../../app/API/register';\n\n//utils\nimport isBlankString from '../../app/utils/blankString';\n\n//Componenets:\nimport TextInput from '../Ncurses/TextInput';\nimport WithContentContainer from '../Ncurses/wrapper/WithContentContainer';\nimport WithMenuDialog, {\n  menuDialogSize,\n} from '../Ncurses/wrapper/WithMenuDialog';\nimport WithMenuButton from '../Ncurses/wrapper/WithMenuButton';\n\nconst Register: React.FunctionComponent = () => {\n  const [nickname, setNickname] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const authState = useSelector(selectAuth);\n\n  const updateNickname = (event: ChangeEvent<HTMLInputElement>) => {\n    setNickname(event.target.value);\n  };\n\n  const updateEmail = (event: ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n\n  const handleRegistration = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (isBlankString(email) || isBlankString(nickname)) {\n      alert('email and nickname cant be empty');\n    } else {\n      const payload: registerationRequestPayload = {\n        nickname,\n        email,\n      };\n      register(payload).then(response => {\n        switch (response.status) {\n          case 200:\n            dispatch(setRegistered());\n            history.push('/challenges');\n            break;\n          case 400:\n            if (response.body !== null) {\n              response.body.map((data: registerationResponsePayload) => {\n                alert('Somthing happened');\n                data.error.map(duplicateValue =>\n                  alert(`looks like ${duplicateValue} is already taken`),\n                );\n              });\n            }\n            break;\n        }\n      });\n    }\n  };\n\n  if (authState === isAuthenticated.loggedIn) {\n    return (\n      <WithMenuDialog\n        size={menuDialogSize.small}\n        pageTitle={'Register'}\n        menuTitle={'Register'}\n        topText={'Please enter the following details to continue'}>\n        <WithContentContainer>\n          <TextInput\n            label={'Nickname: '}\n            required={true}\n            autoFocus={true}\n            autoComplete={'name'}\n            name={'nickname'}\n            input_type={'text'}\n            placeholder={'Nickname'}\n            value={nickname}\n            onChange={updateNickname}\n          />\n          <TextInput\n            label={'Email: '}\n            required={true}\n            autoFocus={false}\n            autoComplete={'email'}\n            name={'email'}\n            input_type={'email'}\n            placeholder={'Email'}\n            value={email}\n            onChange={updateEmail}\n          />\n        </WithContentContainer>\n        <WithMenuButton onClick={handleRegistration}>Save</WithMenuButton>\n      </WithMenuDialog>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Register;\n","import API from './api';\n\nexport type registerationRequestPayload = {\n  nickname: string;\n  email: string;\n};\n\n\nexport type registerationResponsePayload = {\n  error: string[];\n};\n\n\nexport const register = (payload: registerationRequestPayload) =>\n  fetch(API.REGISTER, {\n    method: 'post',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(payload),\n  }).then(response => response.json());\n","import React, {useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n//redux stuff\nimport {selectAuth, isAuthenticated} from '../../app/reducers/authSlice';\n\n//utils\nimport isBlankString from '../../app/utils/blankString';\n\n//Componenets:\nimport challenges, {challenge} from '../../res/challenges';\n\nimport WithMenuButton, {\n  WithMenuButtonSmall,\n} from '../Ncurses/wrapper/WithMenuButton';\nimport MenuNote from '../Ncurses/wrapper/WithMenuNote';\nimport TextInput from '../Ncurses/TextInput';\n\nconst submitButtonSmall = document.getElementById('falcon');\nif (submitButtonSmall !== null) {\n  const originalOnclick = submitButtonSmall.getAttribute('onclick');\n}\nconst hint = document.getElementById('yoda');\nconst makeVisible = (id: string) => {\n  const element = document.getElementById(id);\n  if (element !== null) element.className = 'show';\n};\nconst binarySet = new RegExp('^[0-1]+$');\nlet firstRecurstion = true;\nconst askNicely = () => makeVisible('flag');\n//const checkBinaryHandler = () => {\n//  const userAnswer = document.getElementById('skywalker').value;\n//  if (binarySet.test(userAnswer)) {\n//    makeVisible('yoda');\n//  } else if (firstRecurstion) {\n//    submitButtonSmall.setAttribute('onclick', originalOnclick);\n//    firstRecurstion = false;\n//    checkBinaryHandler();\n//  } else {\n//  }\n//};\nexport type ShowQuestionProps = {\n  id: number;\n  body: string;\n};\n\nenum showHintVals {\n  noHint,\n  showFlag,\n  showBinToDecHint,\n}\nconst ShowQuestion: React.FC<ShowQuestionProps> = ({id, body}) => {\n  const [userAnswer, setUserAnswer] = useState('');\n  const [showHint, setShowHint] = useState(showHintVals.noHint);\n\n  const toggleHint = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (showHint === showHintVals.noHint) {\n      setShowHint(showHintVals.showFlag);\n    }\n  };\n\n  const submitHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (isBlankString(userAnswer)) {\n      alert(\"can't be empty\");\n    } else {\n      if (binarySet.test(userAnswer)) {\n        if (id === 1) {\n          if (binarySet.test(userAnswer)) {\n            setShowHint(showHintVals.showBinToDecHint);\n          }\n        }\n      } else {\n        alert('submit');\n      }\n    }\n  };\n  const updateUserAnswer = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setUserAnswer(event.target.value);\n\n  let prelude;\n  if (id === 1) {\n    prelude = (\n      <div>\n        <div dangerouslySetInnerHTML={{__html: body}} />\n        <FirstQuestion hintState={showHint} onClick={toggleHint} />\n      </div>\n    );\n  } else {\n    prelude = <div dangerouslySetInnerHTML={{__html: body}} />;\n  }\n\n  return (\n    <div className=\"challengeBody\">\n      {prelude}\n\n      <div className=\"btnSmallOuter\">\n        <TextInput\n          label={'Flag:'}\n          autoFocus={true}\n          name={'userAnswer'}\n          input_type={'text'}\n          autoComplete={'flag'}\n          placeholder={'Flag'}\n          value={userAnswer}\n          onChange={updateUserAnswer}\n          required={true}\n        />\n        <WithMenuButton onClick={submitHandler}>submit</WithMenuButton>\n      </div>\n    </div>\n  );\n};\n\ntype firstQProps = {\n  hintState: showHintVals;\n  onClick(e: React.MouseEvent): void;\n};\n\nconst FirstQuestion: React.FC<firstQProps> = ({hintState, onClick}) => {\n  if (hintState === showHintVals.showFlag) {\n    return <p>Computer: 000111000111011110100100110110100001</p>;\n  } else if (hintState === showHintVals.noHint) {\n    return (\n      <WithMenuButtonSmall onClick={onClick}>\n        Aks computer nicely\n      </WithMenuButtonSmall>\n    );\n  } else {\n    return (\n      <p>\n        Well, the flag that you have entered might be correct but there's no way\n        of verifying it. We, unlike computers, only speak decimal.So can you\n        please present the flag in a way that we understand?{' '}\n      </p>\n    );\n  }\n};\n\nexport default ShowQuestion;\n","import CHALLENGE_1 from './challenges/1';\nimport CHALLENGE_2 from './challenges/2';\nimport CHALLENGE_3 from './challenges/3';\nimport CHALLENGE_4 from './challenges/4';\nimport CHALLENGE_5 from './challenges/5';\nimport CHALLENGE_6 from './challenges/6';\nimport CHALLENGE_7 from './challenges/7';\n\nexport type challenge = {\n  id: number;\n  challengeTitle: string;\n  challengeBody: string;\n  challengeAnswer: string;\n  score: number;\n};\n\nconst CHALLENGES = {\n  challenges: [\n    CHALLENGE_1,\n    CHALLENGE_2,\n    CHALLENGE_3,\n    CHALLENGE_4,\n    CHALLENGE_5,\n    CHALLENGE_6,\n    CHALLENGE_7,\n  ],\n};\n\nexport default CHALLENGES;\n","import {challenge} from '../challenges';\n\nconst challengeAnswer = '7641648545';\n\nconst challengeBody = `\n  <p id=\"Obi-Wan-Kenobi\">\n  To a computer, everything is either a 1 or a 0. Even if you feed it an image\n  of pizzas, it'll still be a bunch of 0s and 1s. This way of representing\n  things is called base-2 numeral system or binary numeral system. The flag for\n  this challenge is a 10-digit number in the decimal number system(ranges from 0\n  to 9). <br /> <br />We have given your computer special instructions to hide it away from\n  you. But you know how computers are,they are high maintenance. So maybe if you\n  ask it nicely, it might tell you what the flag is!\n</p>\n<br />\n<style>\n  .hidden {\n    visibility: hidden;\n  }\n  .show {\n    visibility: visible;\n  }\n</style>\n`;\n\nconst CHALLENGE_1: challenge = {\n  id: 1,\n  challengeTitle: 'be3p_b00p_be3p_b00p',\n  challengeBody,\n  challengeAnswer,\n  score: 10,\n};\n\nexport default CHALLENGE_1;\n","import {challenge} from '../challenges';\n\nconst challengeAnswer =\n  'db108f489f3b14e228b3b35f365b3b6d4f64a6f653287347ad3bde203c70cae7';\nconst challengeBody = `\n<p>\nDid you know that files have fingerprints just like us? They <em>are</em> just 0s and\n  1s but they too have fingerprints. The entropy(randomness) lies is how their\n  contents(0s and 1s) are arranged. This fingerprint is often calculated using\n  hash functions, such as SHA256.\n</p>\n<p>\n  The flag for this challenge is the SHA256 checksum(fingerprint) of this\n  <a href=\"/file.txt\" target=\"_blank\">file</a> calculated using SHA256 hash function.\n  <br />\n  <br />\n  File: \n  <a href=\"/file.txt\" target=\"_blank\">file.txt</a>\n</p> `;\n\nconst CHALLENGE_2: challenge = {\n  id: 2,\n  challengeTitle: 'iam_uniqu3',\n  challengeBody,\n  challengeAnswer,\n  score: 10,\n};\n\nexport default CHALLENGE_2;\n","import {challenge} from '../challenges';\n\nconst challengeAnswer = 'E5w&Wwv1jRVRuHT^yf8&%';\nconst challengeBody = `\n<p>\n  What does \"RTV3Jld3djFqUlZSdUhUXnlmOCYl\" mean? I think it has something to do\n  with a binary-to-text encoding that's popular on the World Wide Web\n</p> `;\n\nconst CHALLENGE_3: challenge = {\n  id: 3,\n  challengeTitle: '.... --- .-- -.. -.--',\n  challengeBody,\n  challengeAnswer,\n  score: 20,\n};\n\nexport default CHALLENGE_3;\n","import {challenge} from '../challenges';\n\nconst HEARTBEAT_LEADER=\"https://anxiousturtle.herokuapp.com/\";\nconst challengeAnswer=\"qEizblnviY2fBtApKgQjf08Wdr9S\";\n\nconst challengeBody = `\n<p>\n  We wanted this challenge to be very easy. In fact, we wanted to just give the\n  flag away without any ceremony. Because of how simple this challenge is, we\n  figured we'll put our laziest server up to this task. We asked it to just give\n  it away when you ask for it. But it looks like it is feeling particularly\n  energetic tonight and is pulling tricks on us. We are sorry but you are going\n  to have to retrieve this flag to clear this challenge.\n  <br />\n  <br />\n  Misbehaving server:\n  <a href='${HEARTBEAT_LEADER}'>${HEARTBEAT_LEADER}</a>\n  <br />\n  <br />\n  P.S: Apparently, Firefox is fast enough to talk to the misbehaving server!\n</p> `\n\nconst CHALLENGE_4: challenge = {\n  id: 4,\n  challengeTitle: 'catch_m3_if_u_can',\n  challengeAnswer,\n  challengeBody,\n  score: 20,\n};\n\nexport default CHALLENGE_4;\n","import {challenge} from '../challenges';\n\nconst challengeAnswer = ' SC2INcxcddmV2';\nconst challengeBody = `\n<p>\n  The flag is hidden in this <a href=\"./voodo.txt\" target=\"_blank\">file</a>. It\n  would be very tedious if you look for it manually, something tells me there's\n  a better way.\n</p>\n  <br />\n  <br />\n  File:\n<a href=\"./voodo.txt\" target=\"_blank\">voodo.txt</a>.\n`;\n\nconst CHALLENGE_5: challenge = {\n  id: 5,\n  challengeTitle: 'hidd3n_in_p1ain_sight',\n  challengeAnswer,\n  challengeBody,\n  score: 10,\n};\n\nexport default CHALLENGE_5;\n","import {challenge} from '../challenges';\n\nconst challengeAnswer = 'zlZ6QPh97sg16ds856RK0DIK1waNJwy';\nconst challengeBody = `\n<script>\n  sessionStorage.setItem(\n    'FR5tcymRp1n2VKz9BxWhrstyjyof17z',\n    'nCTF{${challengeAnswer}}',\n  );\n</script>\n<p>Hack this page to retrieve the flag for this challenge</p>\n`;\n\nconst CHALLENGE_6: challenge = {\n  id: 6,\n\n  challengeTitle: 'hack_the_gibson',\n  challengeAnswer,\n  challengeBody,\n  score: 20,\n};\n\nexport default CHALLENGE_6;\n","import {challenge} from '../challenges';\n\nconst challengeAnswer = 'nCTF{91QGh7kJxl0bBYt3tu96GnfqN8i9oSI}';\nconst challengeBody = `\n<p>\n  You are are R2-D2, a cute robot from the Star Wars franchise are R2-D2. You\n  are tasked with hacking into the most secure valut of the Death Star to\n  retrive it's blueprints. The vault is controlled by a computer and requires a\n  password to open. The source code for the vault was obtained by one of our\n  comrades.\n  <br />\n  Please find the password(the flag) hidden in the source code and help the\n  rebels live to fight another day.\n  <br />\n  <br />\n  <br />\n  Vault:\n  <a href=\"https://deathstarvault.herokuapp.com/\" target=\"_blank\"\n    >https://deathstarvault.herokuapp.com/</a\n  >\n  <br />\n  Source code:\n  <a href=\"https://github.com/realaravinth/death-star\" target=\"_blank\">https://github.com/realaravinth/death-star</a>\n</p>\n`;\n\nconst CHALLENGE_7: challenge = {\n  id: 7,\n  challengeTitle: 'R2^_^3_&s%',\n  challengeAnswer,\n  challengeBody,\n  score: 70,\n};\n\nexport default CHALLENGE_7;\n","import React from 'react';\n\nimport challenges, {challenge} from '../../res/challenges';\n\ntype showQuestionProps = {\n  onClick(c: number): void;\n};\n\n\n\nconst ShowTitles: React.FC<showQuestionProps> = ({onClick}) => {\nconst Titles = challenges.challenges.map((c: challenge) => (\n    <li key={c.id} className={\"ctitle\"} onClick={() => onClick(c.id)}>\n      {' '}\n      {c.challengeTitle}{' '}\n    </li>\n  ));\n  return <ul id=\"challenges\"> {Titles} </ul>\n}\n\nexport default ShowTitles;\n\n","import React from 'react';\n\nconst WithContentColumned: React.FunctionComponent = ({children}) => (\n  <div className=\"contentcolumned\">{children}</div>\n);\n\nexport default WithContentColumned;\n","import React from 'react';\n\nconst WithContentSidebar: React.FunctionComponent = ({children}) => (\n  <div className=\"menuoptions menusidebar\">{children}</div>\n);\n\nexport default WithContentSidebar;\n","import React from 'react';\n\n\n\nconst WithContentSidebarBody: React.FunctionComponent = ({children })=> (\n\t<div className=\"menusidebarbody menuoptions\">\n\t\t\t\t{ children }\n\t</div>\n\n);\n\nexport default WithContentSidebarBody;\n\n","import React, {useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n//redux stuff\nimport {selectAuth, isAuthenticated} from '../../app/reducers/authSlice';\n\n//Componenets:\nimport ShowQuestion from './ShowQuestion';\nimport ShowTitles from './ShowTitles';\n\nimport WithContentColumned from '../Ncurses/wrapper/WithContentColumned';\nimport WithMenuDialog, {\n  menuDialogSize,\n} from '../Ncurses/wrapper/WithMenuDialog';\nimport WithContentSidebar from '../Ncurses/wrapper/WithContentSidebar';\nimport WithContentSidebarBody from '../Ncurses/wrapper/WithContentSidebarBody';\nimport challenges, {challenge} from '../../res/challenges';\n\nconst submitButton = document.getElementById('falcon');\nif (submitButton !== null) {\n  const originalOnclick = submitButton.getAttribute('onclick');\n}\nconst hint = document.getElementById('yoda');\nconst makeVisible = (id: string) => {\n  const element = document.getElementById(id);\n  if (element !== null) element.className = 'show';\n};\nconst binarySet = new RegExp('^[0-1]+$');\nlet firstRecurstion = true;\nconst askNicely = () => makeVisible('flag');\n//const checkBinaryHandler = () => {\n//  const userAnswer = document.getElementById('skywalker').value;\n//  if (binarySet.test(userAnswer)) {\n//    makeVisible('yoda');\n//  } else if (firstRecurstion) {\n//    submitButton.setAttribute('onclick', originalOnclick);\n//    firstRecurstion = false;\n//    checkBinaryHandler();\n//  } else {\n//  }\n//};\n\n\n\nconst Challenges: React.FC = () => {\n  const authState = useSelector(selectAuth);\n  const [currentQ, setCurrentQ] = useState(1);\n  const [currentQBody, setCurrentQBody] = useState(\n    challenges.challenges[0].challengeBody,\n  );\n\n  \n  const setBody = (c: number) =>\n    challenges.challenges.forEach((i: challenge) => {\n      if (i.id === c) setCurrentQBody(i.challengeBody);\n    });\n\n\n  console.log(currentQBody);\n  const viewQuestion = (c: number) => {\n    setCurrentQ(c);\n    setBody(c);\n  };\n  if (authState === isAuthenticated.challengeReady) {\n    return (\n      <WithMenuDialog\n        size={menuDialogSize.big}\n        menuTitle={'Challenges'}\n        topText={\n          'Solve these challges to find flags. Flags will be in the form nCTF{secret-goes-in-here}'\n        }\n        pageTitle={'Challenges'}>\n        <WithContentColumned>\n          <WithContentSidebar>\n            <ShowTitles onClick={viewQuestion} />\n          </WithContentSidebar>\n          <WithContentSidebarBody>\n            <ShowQuestion body={currentQBody} id={currentQ} />\n          </WithContentSidebarBody>\n        </WithContentColumned>\n      </WithMenuDialog>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nexport default Challenges;\n","import Challenges from './Challenges';\nexport default Challenges;\n","import Root from './Root';\nexport default Root;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nimport {selectAuth, isAuthenticated} from '../../app/reducers/authSlice';\n\nconst Root: React.FC = () => {\n  const authVal = useSelector(selectAuth);\n  switch (authVal) {\n    case isAuthenticated.loggedIn:\n      return <Redirect to=\"/register\" />;\n    case isAuthenticated.registered:\n      //TODO this redirect should be replaced with a rules component\n      return <Redirect to=\"/challenges\" />;\n    case isAuthenticated.challengeReady:\n      return <Redirect to=\"/challenges\" />;\n    case isAuthenticated.loggedOut:\n      return <Redirect to=\"/login\" />;\n  }\n};\nexport default Root;\n","import API from './api';\n\nconst logout = () =>\n  fetch(API.LOGOUT, {\n    credentials: 'include',\n  }).then(response => response.json());\n\nexport default logout;\n","import Logout from './Logout';\nexport default Logout;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n//redux stuff\nimport {useAppDispatch} from '../../app/store';\nimport {\n  selectAuth,\n  setLoggedOut,\n  isAuthenticated,\n} from '../../app/reducers/authSlice';\n\nimport logout from '../../app/API/logout';\n\nconst Logout: React.FC = () => {\n  const authState = useSelector(selectAuth);\n  const dispatch = useAppDispatch();\n\n  if (authState === isAuthenticated.challengeReady) {\n    dispatch(setLoggedOut());\n    logout();\n  }\n\n  return <Redirect to=\"/login\" />;\n};\nexport default Logout;\n","import React from 'react';\n\ntype progressProps = {\n  completed: number;\n};\n\n// TODO animation\n\n// TODO animation\nconst ProgressBar: React.FC<progressProps> = ({completed}) => {\n  const bgcolor = '#32b31d';\n\n  const containerStyles = {\n    height: 13,\n    width: '100%',\n    display: 'flex',\n  } as React.CSSProperties;\n\n  const fillerBoxStyles = {\n    height: '100%',\n    width: `10%`,\n    border: '0.1px solid',\n    borderColor: '#fff',\n    textAlign: 'right',\n  } as React.CSSProperties;\n\n  const numBoxes = [];\n  for (let i = 0; i < 30; i++) {\n    numBoxes.push(i);\n  }\n\n  const boxes = numBoxes.map(_ => <div style={fillerBoxStyles} />);\n  return <div style={containerStyles}>{boxes}</div>;\n};\n\nexport default ProgressBar;\n","import Loading from './Loading';\nexport default Loading;\n","import React from 'react';\n\nimport ProgressBar from './ProgressBar';\n\nimport WithContentContainer from '../Ncurses/wrapper/WithContentContainer';\nimport WithMenuDialog, {\n  menuDialogSize,\n} from '../Ncurses/wrapper/WithMenuDialog';\n\nconst Loading: React.FC = () => (\n  <WithMenuDialog\n    size={menuDialogSize.loading}\n    menuTitle={'Loading'}\n    topText={''}\n    pageTitle={'Loading'}>\n    <ProgressBar completed={100} />\n  </WithMenuDialog>\n);\n\nexport default Loading;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport Login from './Login';\nimport Leaderboard from './Leaderboard';\nimport Register from './Register';\nimport Challenges from './Challenges';\nimport Root from './Root';\nimport Logout from './Logout';\nimport Loading from './Loading';\n\nconst Routes: React.FunctionComponent = () => (\n  <Switch>\n    <Route component={Leaderboard} path=\"/leaderboard\" />\n    <Route component={Register} path=\"/register\" />\n    <Route component={Challenges} path=\"/challenges\" />\n    <Route component={Login} path=\"/login\" />\n    <Route component={Logout} path=\"/logout\" />\n    <Route component={Loading} exact path=\"/loading\" />\n    <Route component={Root} exact path=\"/\" />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\n\n// Componento:\n//\nimport Heading from './components/Heading';\nimport Navbar from './components/Navbar';\nimport BanMobileDevices from './components/Ncurses/BanMobileDecives';\nimport Routes from './components/Routes';\n\n// Stylesheets:\nimport './ncurses.css';\n\nconst App = () => {\n  if (window.matchMedia('(max-width: 1000px)').matches) {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <BanMobileDevices />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Heading />\n        <div className=\"container\">\n          <Routes />\n        </div>\n        // End of container div\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n//import {PersistGate} from 'redux-persist/integration/react';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './app/store';\n\nimport {saveState} from './app/utils/persistState';\n\nstore.subscribe(() => saveState(store.getState()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}